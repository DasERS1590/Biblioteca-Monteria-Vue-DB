// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/autores": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "Create author",
                "parameters": [
                    {
                        "description": "Create an author",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.NewAuthor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.Author"
                        }
                    }
                }
            }
        },
        "/api/admin/books": {
            "get": {
                "description": "Get books filtered by estado and editorial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get filtered books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Estado filter",
                        "name": "estado",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Editorial filter",
                        "name": "editorial",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new book and stores it in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book input",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.Book"
                        }
                    }
                }
            }
        },
        "/api/admin/books/unavailable": {
            "get": {
                "description": "Get books that are currently unavailable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get unavailable books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/books/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing book by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book input",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Book"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a book by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/books/{id}/edit": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get book details for editing by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get book for editing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Book"
                        }
                    }
                }
            }
        },
        "/api/admin/fines": {
            "get": {
                "description": "Get fines for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multas"
                ],
                "summary": "Get user fines",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "idsocio",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Fine"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/fines/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search fines by user name or email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multas"
                ],
                "summary": "Search fines by user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term (name or email)",
                        "name": "busqueda",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Fine"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/fines/to": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all pending fines for admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multas"
                ],
                "summary": "Get pending fines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Fine"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/loans": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos los préstamos activos en un rango de fechas específico para administradores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Obtener préstamos activos por rango de fechas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fecha de inicio (YYYY-MM-DD)",
                        "name": "startdate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha de fin (YYYY-MM-DD)",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lista de préstamos activos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Parámetros de fecha faltantes o inválidos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "No tienes permisos para acceder a este recurso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/admin/reservations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get active reservations with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservas"
                ],
                "summary": "Get active reservations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "idsocio",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "idlibro",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Reservation date",
                        "name": "fechareserva",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "nombre_socio",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Reservation"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get users filtered by type (normal, estudiante, profesor)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "summary": "Get users by type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User type (normal, estudiante, profesor)",
                        "name": "tiposocio",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.User_"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuarios"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.User_"
                            }
                        }
                    }
                }
            }
        },
        "/api/autores": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all authors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authors"
                ],
                "summary": "Get all authors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Author"
                            }
                        }
                    }
                }
            }
        },
        "/api/books": {
            "get": {
                "description": "Get books filtered by genre and author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books by genre and author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre filter",
                        "name": "genero",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author filter",
                        "name": "autor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            }
        },
        "/api/books/available": {
            "get": {
                "description": "Get available books filtered by genre, author and title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get available books by criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre filter",
                        "name": "genero",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author filter",
                        "name": "autor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title filter",
                        "name": "titulo",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            }
        },
        "/api/books/publication-date": {
            "get": {
                "description": "Get books published within a date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books by publication date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            }
        },
        "/api/books/reservation": {
            "get": {
                "description": "Get books that can be reserved",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get books for reservation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Book"
                            }
                        }
                    }
                }
            }
        },
        "/api/editoriales": {
            "get": {
                "description": "Get all editorials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Editoriales"
                ],
                "summary": "Get editorials",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Editorial"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new editorial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Editoriales"
                ],
                "summary": "Create editorial",
                "parameters": [
                    {
                        "description": "Editorial data",
                        "name": "editorial",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Editorial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.Editorial"
                        }
                    }
                }
            }
        },
        "/api/fines": {
            "get": {
                "description": "Get pending fines for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multas"
                ],
                "summary": "Get user pending fines",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "usuario_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Fine"
                            }
                        }
                    }
                }
            }
        },
        "/api/fines/{id}/pay": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a fine as paid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multas"
                ],
                "summary": "Pay fine",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment confirmation",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/loans": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos los préstamos activos asociados a un usuario por su ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Obtener préstamos activos de un usuario",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "usuario_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lista de préstamos activos del usuario",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Parámetro 'usuario_id' faltante o inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No hay préstamos activos para este usuario",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo préstamo para un usuario autenticado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Crear un nuevo préstamo",
                "parameters": [
                    {
                        "description": "Crear prestamo",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Loan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Préstamo creado exitosamente",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Solicitud mal formada o parámetros faltantes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "No autorizado: token JWT inválido o ausente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/loans/completed": {
            "get": {
                "description": "Get completed loan history for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Get user completed loan history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "idsocio",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Loan"
                            }
                        }
                    }
                }
            }
        },
        "/api/loans/extend/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Extend the return date of a loan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Extend loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Loan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New return date",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loan extended successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/loans/history": {
            "get": {
                "description": "Get loan history for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Get user loan history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "idsocio",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Loan"
                            }
                        }
                    }
                }
            }
        },
        "/api/loans/return/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a loan as returned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prestamos"
                ],
                "summary": "Return loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Loan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loan returned successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticacion"
                ],
                "summary": "Login a los Usuarios",
                "parameters": [
                    {
                        "description": "Credenciales de login",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Credentials"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Autenticacion"
                ],
                "summary": "Registro Para nuevos usuarios",
                "parameters": [
                    {
                        "description": "Register credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/reservation": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new book reservation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservas"
                ],
                "summary": "Create reservation",
                "parameters": [
                    {
                        "description": "Reservation data",
                        "name": "reservation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Reservation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/data.Reservation"
                        }
                    }
                }
            }
        },
        "/api/reservations": {
            "get": {
                "description": "Get active reservations for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservas"
                ],
                "summary": "Get user active reservations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "usuario_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Reservation"
                            }
                        }
                    }
                }
            }
        },
        "/api/reservations/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel an existing reservation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservas"
                ],
                "summary": "Cancel reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Reservation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation cancelled successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Provides information about the current system status and version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check system status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string"
                                },
                                "system_info": {
                                    "type": "object",
                                    "properties": {
                                        "environment": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.Author": {
            "type": "object",
            "properties": {
                "idautor": {
                    "type": "integer"
                },
                "nacionalidad": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                }
            }
        },
        "data.Book": {
            "type": "object",
            "properties": {
                "fechapublicacion": {
                    "type": "string"
                },
                "genero": {
                    "type": "string"
                },
                "idautores": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ideditorial": {
                    "type": "integer"
                },
                "idlibro": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "titulo": {
                    "type": "string"
                }
            }
        },
        "data.Editorial": {
            "type": "object",
            "properties": {
                "direccion": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "paginaweb": {
                    "type": "string"
                }
            }
        },
        "data.Fine": {
            "type": "object",
            "properties": {
                "estado": {
                    "type": "string"
                },
                "fechamulta": {
                    "type": "string"
                },
                "idmulta": {
                    "type": "integer"
                },
                "idprestamo": {
                    "type": "integer"
                },
                "saldopagar": {
                    "type": "number"
                }
            }
        },
        "data.Loan": {
            "type": "object",
            "properties": {
                "fecha_devolucion": {
                    "type": "string"
                },
                "fecha_prestamo": {
                    "type": "string"
                },
                "libro_id": {
                    "type": "integer"
                },
                "usuario_id": {
                    "type": "integer"
                }
            }
        },
        "data.NewAuthor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                }
            }
        },
        "data.Reservation": {
            "type": "object",
            "properties": {
                "fechareserva": {
                    "type": "string"
                },
                "idlibro": {
                    "type": "integer"
                },
                "idsocio": {
                    "type": "integer"
                }
            }
        },
        "data.User_": {
            "type": "object",
            "properties": {
                "correo": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "fechanacimiento": {
                    "type": "string"
                },
                "fecharegistro": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nombre": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "telefono": {
                    "type": "string"
                },
                "tiposocio": {
                    "type": "string"
                }
            }
        },
        "main.Credentials": {
            "type": "object",
            "properties": {
                "contrasena": {
                    "type": "string"
                },
                "correo": {
                    "type": "string"
                }
            }
        },
        "main.RegisterRequest": {
            "type": "object",
            "properties": {
                "contrasena": {
                    "type": "string"
                },
                "correo": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "telefono": {
                    "type": "string"
                },
                "tipo_socio": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer \" followed by your JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "BibliotecaAPI",
	Description:      "Rest-Api for library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
